# Automatically generated playbook from a template in ansible/templates/configure_scaled_processingON.yaml.j2
---
- name: "Prepare playbook for {{ scaled_node }} node"
  hosts: {{ scaled_node }}{% raw %}
  max_fail_percentage: "{{ vnf_fail_ratio }}"
  become: true
  become_method: sudo
  remote_user: TEST
  vars_files:
    - vars/global_var.yml
  gather_facts: yes
  tasks:
    - include: tasks/common/relate_fqdn_to_floating_ip.yml
    - include: tasks/common/generic_tasks.yml
    - include: tasks/common/update_etc_hosts.yml

- name: Fetch keycloak certificate from UI node
  hosts: ui-vip
  remote_user: TEST
  vars:
    ansible_dir: /tmp/ansible_tmp
  vars_files:
    - roles/keycloak/defaults/main.yml
    - vars/global_var.yml
  tasks:
    - include: tasks/common/fetch_keycloak_cert.yml

- name: Do preparations to get correct keycloak cert to scaled out processingON nodes
  hosts: localhost
  become: no
  tasks:
    - include: tasks/common/template_keycloak_json.yml

- name: Copy prometheus CA key back to docker container
  hosts: vdu-ui
  max_fail_percentage: "{{ vnf_fail_ratio }}"
  become: true
  vars_files:
    - vars/global_var.yml
  roles:
    - { role: cpro-copy-ca-private }

{% endraw %}
- name: "Main play for {{ scaled_node}} nodes."
  hosts: {{ scaled_node }}{% raw %}
  max_fail_percentage: "{{ vnf_fail_ratio }}"
  serial: "{{ vnf_serial }}"
  become: true
  become_method: sudo
  vars_files:
    - vars/global_var.yml
    - vars/processing_online_var.yml
    - vars/optional_volumes.yml
    - vars/alarm_var.yml
  vars:
    ha_master: "{{ inventory_hostname }}"
    reconfigure: False
  gather_facts: "{{ vnf_gather_facts }}"
  pre_tasks:
    - name: Include gtpc volume mount if used
      set_fact:
        cinder_volumes: "{{ cinder_volumes + gtpc_volume }}"
      when: (vnf_context_data.stack_params.cbam.extensions.volume_size_online_gtpc > 1) and (vnf_context_data.stack_params.cbam.extensions.install_gtp_collector == true)

    - name: Verify that TEST is stopped
      service: name=el-node-manager state=stopped
  post_tasks:
    - name: make sure el-node-manager is started  & daemon reloaded
      systemd:
        state: restarted
        daemon_reload: yes
        name: el-node-manager
        enabled: yes
    - name: Open ports for the Diameter Rf
      firewalld:
        zone: public
        port: "{{ item.port }}/{{ item.protocol }}"
        permanent: true
        immediate: true
        state: enabled
      with_items:
       - { port: 3868, protocol: tcp }
       - { port: 3868, protocol: sctp }
    
    - name: Update tools.pl to https
      shell: sed -i s/http:/https:/g /opt/TEST/TEST/.mds.rc

    - include: cert_cleanup.yaml

  roles:
    - { role: user-and-access-management }
    - { role: ntp }
    - { role: dns }
    - { role: configure-logrotate }
    - { role: el-ha, hookFunction: mount-volumes, preserve_data: True }
    - { role: el-db }
    - { role: el-node-manager }
    - { role: el-xml-audit-plugin }
    - { role: gtpc-prime-config, when: vnf_context_data.stack_params.cbam.extensions.install_gtp_collector == true }
    - { role: el-systemtools, ansible_dir: /tmp/ansible_tmp }
    - { role: el-crypto, when: activate_crypto }
    - { role: lookup-server-mdsrc }
    - { role: docker-engine-install }
    - {
        role: lookup-server-add-server,
        lookup_server_name: "{{ vnf_context_data.stack_params.cbam.extensions.online_lookup_server_name }}-ON-{{ groups['vdu-processingON'].index(inventory_hostname) }}",
        lookup_server_port: "{{ vnf_context_data.stack_params.cbam.extensions.online_lookup_server_port }}",
        when: vnf_context_data.stack_params.cbam.extensions.online_lookup_server_name != ""
      }
    - { role: el-node-exporter }
    - { role: cpro-tls, operation: "scale" }
    - { role: el-fluentd, operation: "scale" }
    - { role: el-processing-state }

- name: Main play to update prometheus scrape targets in vdu-ui nodes
  hosts: vdu-ui
  max_fail_percentage: "{{ vnf_fail_ratio }}"
  serial: "{{ vnf_serial }}"
  become: true
  become_method: sudo
  vars_files:
    - vars/global_var.yml
    - vars/ui_var.yml
    - vars/alarm_var.yml
  vars:
    dr_server_lists: ""
    dr_proc_server_lists: ""
    post_scaling: True
  gather_facts: "{{ vnf_gather_facts }}"
  roles:
    - { role: cpro-server }

- name: Configure all vdu nodes with new SSH keys
  hosts: vdu-db:vdu-cgf:vdu-ui:vdu-processingOFF:vdu-processingON:vdu-oam:vdu-crdb
  max_fail_percentage: "{{ vnf_fail_ratio }}"
  become: true
  vars_files:
    - vars/global_var.yml
  pre_tasks:
    - name: Fetch public key to Ansible container
      fetch: 
        src: ~TEST/.ssh/id_rsa.pub
        dest: "{{ inventory_dir }}/public_keys/id_rsa-{{ inventory_hostname }}.pub"
        flat: yes
      register: download_result
      until: download_result | success
      retries: 3
      delay: 1
  roles:
    - { role: bootstrap-servers }
{% endraw %}
